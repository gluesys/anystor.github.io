---
layout:     post
title:      "컴포저블 인프라란?"
date:       2021-10-22
categories: blog
author:     박주형 (jhpark@gluesys.com)
tags:       [컴포저블 인프라, Composable Infrastructure, PCIe, CXL, Gen-Z]
cover:      "/assets/composableinfra.jpg"
main:       "/assets/composableinfra.jpg"
---

인공지능 및 빅데이터 분석 등의 고성능 워크로드를 요구하는 애플리케이션의 비중이 날이 갈수록 증가하고, 클라우드 서비스의 확대로 고객들에게 제공되는 서비스의 규모와 종류가 다양해지고 있습니다. 각 애플리케이션은 물리적인 하드웨어에 매핑되는 하드웨어 요구 사항을 가지고 있고, 새로운 버전과 최적화 기능 등이 빠르게 배포되고 있는데 비해, 하드웨어의 발전 속도는 소프트웨어의 발전 속도를 따라가지 못하고 있습니다. 이는 하드웨어를 구매한 고객에게 있어서 애플리케이션 성능이 하드웨어의 최대 성능에 머무르게 된다는 문제가 있습니다.  
  
게다가, 높아지는 애플리케이션의 성능 요구 사항을 맞추기 위해 GPU와 FPGA 등을 활용한 가속기(accelerator), SmartNIC를 활용한 CPU 오프로드 등이 등장하면서 하드웨어의 복잡도는 매우 높아지고 있습니다. 이렇게 복잡해지는 시스템 아키텍처로 인해 IT 관리자들에게 있어서는 시스템 아키텍처와 CPU, 메모리, 네트워크 대역폭, 지연시간, 가용성 등의 애플리케이션 리소스를 최적으로 활용하기 위해 시스템 디자이너급의 이해도와 기술 지식을 갖추어야 하지만, 현실은 녹록지 못한 상황입니다. 이 때문에, 시스템 구축 시 복잡한 하드웨어 구성을 구현하기보다는 가상화를 통해 여러 애플리케이션을 하나의 시스템에서 가동하는 방법으로 보완을 할 수 있지만, 시스템 증축 시 필요한 리소스만 추가 못하고 오버프로비저닝을 하게 되기 때문에 운영에 있어서 비용 최적화를 구현하지 못하게 됩니다. 한마디로 나날이 높아져만 가는 애플리케이션의 시스템 요구 사항에 대해 현재 하드웨어 구성으로는 성능과 비용 효율이 떨어진다는 것입니다. 여기서 데이터 센터의 컴퓨트, 네트워크, 스토리지 등의 리소스 활용 효율을 극대화하고, 시스템 복잡도를 줄이는 방안으로서 컴포저블 인프라라는 개념이 제시되고 있습니다.  
  
&nbsp;
  
## 컴포저블 인프라  
  
**컴포저블 인프라(composable infrastructure)**는 말 그대로 필요에 따라 구성 가능한 인프라를 뜻합니다. 컴포저블 인프라는 단일 서버 보드에 CPU, 메모리, 스토리지, 네트워크 등의 리소스들이 함께 구성된 형태가 아닌, 각 리소스를 하드웨어에서 분리(disaggregate) 하여 가상의 풀로 구현합니다. 개념은 벤더들마다 조금씩 상이한데, 소프트웨어 정의 인프라(software-defined infrastructure)와도 용어를 혼용하기도 합니다.  
  
컴포저블 인프라 환경에서 특정 애플리케이션을 구동 시, 별도의 하드웨어를 구성하거나 직접 리소스를 할당하는 대신 애플리케이션 개발자가 미리 정한 하드웨어 요구 사항이 API를 통해 자동으로 전달되어 필요한 리소스를 적절하게 분배되게 합니다. 할당된 시스템 리소스는 관리 API를 통해 자동으로 운용되며, 애플리케이션의 필요에 따라 추가 할당 및 회수를 수행합니다. 또한, 컴포저블 인프라에서는 CPU 또는 가속기와 메모리로 구성된 서버, 스토리지 어레이, 네트워크 장비가 여러 대로 구성된 랙 단위의 형상으로 구성되고, 증설 및 교체가 자유롭습니다. 이는 기존의 하드웨어 중심적인 관점에서 떠나 애플리케이션 요구 사항 중심적인 방식으로 이동했다고 할 수 있습니다.  
  
이해를 돕기 위해 비슷하지만 약간 다른 개념인 하이퍼컨버지드 인프라(hyperconverged infrastructure, 이하 HCI)와 비교해 보고자 합니다:  
|  | HCI | 컴포저블 인프라 |
| :--- | :--- | :--- |
| 하드웨어 | {::nomarkdown}<ul><li>컴퓨팅, 네트워크, 스토리지를 하나의 박스로 구현하고 클러스터를 구성.</ul></li>{:/} | {::nomarkdown}<ul><li>컴퓨팅 및 메모리를 위한 서버, 스토리지 어레이, 네트워크 장비를 랙 단위로 넣어서 구성.</ul></li>{:/} |
| 리소스 가상화 | {::nomarkdown}<ul><li>각 노드의 리소스를 가상화해 클러스터 내에 하나의 리소스 풀로 구현.</ul></li>{:/} | {::nomarkdown}<ul><li>{:/}랙 내 리소스를 가상 리소스 풀로 통합해 고속 네트워크 기술로 데이터 센터 어디에서든 접근 가능하게 구현.{::nomarkdown}</ul></li>{:/} |
| 확장의 유연성 | {::nomarkdown}<ul><li>특정 리소스의 증설이 필요해도 박스 단위로 증설.</ul></li>{:/} | {::nomarkdown}<ul><li>컴퓨팅, 스토리지, 네트워크가 구분되어 있기 때문에 필요한 부분만 개별로 증설 가능.</ul></li>{:/} |
| 관리 소프트웨어 | {::nomarkdown}<ul><li>{:/}하이퍼바이저 기반 기술로 가상머신 및 컨테이너를 통한 관리 제공.{::nomarkdown}</ul></li>{:/} | {::nomarkdown}<ul><li>가상머신 및 컨테이너뿐만 아니라 베어메탈까지 관리.</ul></li>{:/} |
  
&nbsp;
  
## 컴포저블 인프라 내 연결  
  
한편, 현재 데이터 센터는 이전과는 달리 연산 성능 보조를 위한 FPGA나 GPU와 같은 가속기의 역할이 커지고 있습니다. 하지만, 기존의 이더넷이나 인피니밴드 기반의 네트워크 환경은 이러한 가속기와 타 프로세서 간에 메모리 공유를 지원하지 않은 캐시 일관성[^1] 문제 때문에 원하는 만큼 데이터 전송 효율을 높이기 힘들게 됩니다.  
  
여기서 캐시 일관성 문제를 해결하기 위해 많은 벤더들이 PCIe 인터페이스에 주목하게 되었습니다. PCIe는 거의 모든 서버 보드에 탑재되어 있으면서, 네트워크 카드나 GPU, NVMe 등의 장비를 서로 연결하는 고속 인터페이스이기 때문입니다. 이러한 PCIe 인터페이스를 활용해 최근 CXL과 Gen-Z와 같은 PCIe 기반의 인터커넥트 기술이 대두되고 있습니다.  
  
**CXL(Compute Express Link)**은 인텔을 중심으로 한 CXL 컨소시움에서 제시한 오픈형 상호 연결(interconnect) 표준 프로토콜입니다. CPU의 메모리와 GPU나 FPGA와 같은 가속기 메모리 간에 직접적인 상호 연결을 지원해 메모리 공유를 통한 캐시 일관성을 제공합니다. 게다가 네트워크 카드에서 CPU 메모리처럼 가속기의 메모리에 접근을 가능하게 합니다. 이처럼 같은 유형의 프로세서 내에서만 지원되던 공용 메모리 풀을 다른 유형의 프로세서나 디바이스와도 공유하게 되기 때문에 메모리 간 초저지연을 구현할 수 있고, 무엇보다 PCIe 5.0 인터페이스를 기반으로 무수한 이기종 디바이스들을 지원한다는 점이 특징입니다.  
  
**Gen-Z**는 HPE를 중심으로 한 Gen-Z 컨소시움에서 제시하는 오픈형 상호 연결 표준 프로토콜입니다. CXL과 같이 이기종 프로세서 간 캐시 일관성을 주요 과제로 삼고 있지만, 로컬 시스템 위주의 CXL 과는 달리 물리적 계층을 IEEE 802.3 이더넷을 기반으로 한 스위치 구성을 지원합니다. 이로 인해 랙이나 데이터 센터 단위의 연결망 사이에서 공유 메모리를 구현할 수 있고, 각 프로세서에서 독자적으로 메모리 풀에 접근할 수 있다는 점이 특징입니다.  
  
&nbsp;
  
![Alt text](/assets/composableinfra_cxlgenz.png){: width="700"}
<center>&#60; 컴포저블 인프라 구성도 예시 &#62;</center>
  
&nbsp;
  
CXL과 Gen-Z는 이처럼 프로세서 간 캐시 일관성에 있어서는 비슷한 기술처럼 보입니다만, 서로 경쟁하는 위치가 아닌 상호운용성(interoperability)에 더 주목받고 있습니다. 위 이미지에서 보시다시피, CXL은 서버 내의 메인 프로세서와 FPGA 및 GPU간의 메모리 공유에 중점을 두고 있는 반면, Gen-Z는 컴퓨팅 서버, 가속기 서버, 메모리 서버, 스토리지 등을 아우르는 메모리 풀을 구성하는 것을 볼 수 있습니다. 이러한 두 표준의 등장으로 컴포저블 인프라 구성 시 서버 내부와 서버 간 통신에서의 리소스 분배의 유연성은 극대화될 것으로 보고 있습니다. 실제 지난 2020년 4월, 이 두 컨소시엄은 MOU를 맺고 기술 협력과 상호 운용의 가능성에 대해 제시한 바 있습니다. 이로써 향후 단일화된 연결 표준도 기대해 볼 수도 있겠습니다.  
  
&nbsp;
  
## 마치며
  
지금까지 컴포저블 인프라의 개념과 특징, 그리고 컴포저블 인프라 내 연결고리로 주목받고 있는 CXL과 Gen-Z 표준에 대해 설명했습니다. 향후 컴포저블 인프라 관련 표준이나 새로운 기술이 나오면 블로그에서 조금 더 다루어 볼 예정입니다.  
  
## 참고
  
 * https://www.snia.org/sites/default/files/SMI/Composable-Infrastructure-Computational-Storage-webcast-9-15-20.pdf
 * https://www.electronicdesign.com/industrial-automation/article/21121821/whats-the-difference-between-opencapi-cxl-and-genz
 * https://www.snia.org/educational-library/composable-infrastructure-and-computational-storage-2020
 * https://searchitoperations.techtarget.com/definition/composable-infrastructure
 * https://blocksandfiles.com/2021/10/04/element-invisibility-in-composable-systems-pcie-vs-ethernet/
  
&nbsp;

### 각주
  
[^1]: 캐시 일관성(cache coherence): 공용 메모리 풀에 연결된 각 프로세서가 각자 보유한 로컬 캐시로 작업을 하는 상황에서 한 프로세서의 캐시에서 변경된 값이 다른 프로세서 캐시의 값과 일치하기 않게 되는 경우, 즉각적으로 갱신된 값을 다른 프로세서에서 사용할 수 있게 해 값의 일관성을 유지하는 것을 말합니다.